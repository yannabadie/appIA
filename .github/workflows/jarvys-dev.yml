name: JARVYS-Dev Orchestration

on:
  # ‚è∞ ex√©cute l‚Äôagent chaque heure
  schedule:
    - cron: '0 * * * *'
  # ‚ñ∂Ô∏è d√©clenchement manuel
  workflow_dispatch:

env:
  IMAGE_NAME: jarvys-dev
  IMAGE_TAG: latest

jobs:
  build-run:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: jarvys-dev
      cancel-in-progress: true

    steps:
    # 1Ô∏è‚É£ R√©cup√©ration du code (historique complet)
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2Ô∏è‚É£ Buildx + cache GHA
    - name: Set up Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true

    # 3Ô∏è‚É£ Build l‚Äôimage (cache bidirectionnel) et la charge dans le d√©mon
    - name: Build container image
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        cache-from: type=gha
        cache-to:   type=gha,mode=max
        push: false          # on ne pousse pas
        load: true           # üîë charge l‚Äôimage localement pour l‚Äô√©tape suivante

    # 4Ô∏è‚É£ Lance JARVYS-Dev
    - name: Run JARVYS-Dev agent
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        SUPABASE_URL:   ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY:   ${{ secrets.SUPABASE_KEY }}
        GITHUB_TOKEN:   ${{ secrets.GITHUB_TOKEN }}
      run: |
        docker run --rm \
          -e OPENAI_API_KEY \
          -e SUPABASE_URL \
          -e SUPABASE_KEY \
          -e GITHUB_TOKEN \
          ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
